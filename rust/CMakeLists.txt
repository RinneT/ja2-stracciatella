cmake_minimum_required(VERSION 3.1)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/../cmake")

set(LIBSTRACCIATELLA_TARGET "" CACHE STRING "Rust target architecture for libstracciatella")

find_package(Cargo 0.20.0 REQUIRED)
find_package(Rustc 1.19.0 REQUIRED)

set(LIBSTRACCIATELLA_BUILD_SWITCHES "")
set(LIBSTRACCIATELLA_BUILD_TYPE "debug")
set(LIBSTRACCIATELLA_BUILD_DIR "${CMAKE_BINARY_DIR}/rust")
set(LIBSTRACCIATELLA_RUSTFLAGS "--print=native-static-libs")
set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES ${LIBSTRACCIATELLA_BUILD_DIR})

if(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo" OR CMAKE_BUILD_TYPE STREQUAL "Release")
    set(LIBSTRACCIATELLA_BUILD_TYPE "release")
    set(LIBSTRACCIATELLA_BUILD_SWITCHES ${LIBSTRACCIATELLA_BUILD_SWITCHES} "--${LIBSTRACCIATELLA_BUILD_TYPE}")
endif()
if (MSVC)
    set(LIBSTRACCIATELLA_RUSTFLAGS "${LIBSTRACCIATELLA_RUSTFLAGS} -C target-feature=+crt-static")
endif()

set(LIBSTRACCIATELLA_NAME "${CMAKE_STATIC_LIBRARY_PREFIX}stracciatella${CMAKE_STATIC_LIBRARY_SUFFIX}")
if (MINGW)
    set(LIBSTRACCIATELLA_NAME "stracciatella.lib")
endif()
if(LIBSTRACCIATELLA_TARGET)
    set(LIBSTRACCIATELLA_BUILD_SWITCHES ${LIBSTRACCIATELLA_BUILD_SWITCHES} "--target=${LIBSTRACCIATELLA_TARGET}")
    set(LIBRARY_LOCATION "${LIBSTRACCIATELLA_BUILD_DIR}/${LIBSTRACCIATELLA_TARGET}/${LIBSTRACCIATELLA_BUILD_TYPE}/${LIBSTRACCIATELLA_NAME}")
else()
    set(LIBRARY_LOCATION "${LIBSTRACCIATELLA_BUILD_DIR}/${LIBSTRACCIATELLA_BUILD_TYPE}/${LIBSTRACCIATELLA_NAME}")
endif()

set(HEADER_LOCATION "${LIBSTRACCIATELLA_BUILD_DIR}/stracciatella.h")

add_custom_target(rust-build ALL
    COMMAND ${CMAKE_COMMAND} -E env RUST_BACKTRACE=1 HEADER_LOCATION=${HEADER_LOCATION} RUSTFLAGS=${LIBSTRACCIATELLA_RUSTFLAGS} CARGO_TARGET_DIR=${LIBSTRACCIATELLA_BUILD_DIR} ${CARGO_EXECUTABLE} build --verbose ${LIBSTRACCIATELLA_BUILD_SWITCHES}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

install(FILES ${LIBRARY_LOCATION} DESTINATION lib RENAME "${CMAKE_STATIC_LIBRARY_PREFIX}stracciatella${CMAKE_STATIC_LIBRARY_SUFFIX}")
install(FILES ${HEADER_LOCATION} DESTINATION include)
